<script setup>
import { usePlayer, useWidget } from 'https://cdn.jsdelivr.net/npm/@vue-motion/core@latest/dist/index.js'
import { Motion, Rect, move } from 'https://cdn.jsdelivr.net/npm/@vue-motion/lib@latest/dist/index.js'
import { onMounted } from 'https://cdn.jsdelivr.net/npm/vue@3.5.12/dist/vue.esm-browser.js'

// 1. use the hook to get the two key methods.
const { play, useAnimation } = usePlayer()

// 2. Get the widget with the `useWidget` hook.
const rect1 = useWidget()

onMounted(() => {
  // 5. use `useAnimation` to get a animation manager from the get widget instance.
  useAnimation(rect1)
    .animate(move, { duration: 1, offsetX: 100, offsetY: 100 }) // 6. Add `move` animation to the widget.
    .delay(3) // 7. delay 3 seconds.
    .exec(() => {
      console.log('animation end') // 8. output
    })
  // 9. After mounted, call `play` method to begin the animation.
  play()
})
</script>

<template>
  <!-- 3. Set the animation root of component `<Motion>`, set his width and height -->
  <Motion :width="1600" :height="900">
    <!-- 4. Add a basic widget in animation, and bind the widget instance to the `widget` prop -->
    <Rect :width="200" :height="200" :widget="rect1" />
  </Motion>
</template>
